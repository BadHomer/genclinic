import {RootState} from "@/core/store/store";
import {createSlice} from "@reduxjs/toolkit";



export interface IModalState {
    isOpen: boolean
}

const initialModalState : IModalState = {
    isOpen : false,
};
export const counterSlice = createSlice({
    name: 'modalState',
    initialState: initialModalState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        openModal: (state : IModalState) => {
            // Redux Toolkit allows us to write "mutating" logic in reducers. It
            // doesn't actually mutate the state because it uses the Immer library,
            // which detects changes to a "draft state" and produces a brand new
            // immutable state based off those changes
            state.isOpen = true;
        },
       closeModal : (state : IModalState) => {
            state.isOpen = false;
       }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
});

export const { openModal, closeModal } = counterSlice.actions;

export const selectState = (state: RootState) => state.recordModalState
export default counterSlice.reducer;
